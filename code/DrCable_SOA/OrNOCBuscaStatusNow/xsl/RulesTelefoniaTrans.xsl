<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="../xsd/OrNOCBuscaStatusNow.xsd"/>
      <rootElement name="processResponse" namespace="http://xmlns.cablevision.net.mx/DrCable_SOA/DrCable/OrNOCBuscaStatusNow"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="../xsd/GetDiagnosticTel_DSMessageTypes.xsd"/>
      <rootElement name="callFunctionStateless" namespace="http://xmlns.oracle.com/GetDiagnosticTel/GetDiagnosticTel_DS"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.7.0(build 130301.0647.0008) AT [TUE OCT 22 13:11:32 CDT 2013]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:ns0="http://schemas.microsoft.com/2003/10/Serialization/"
                xmlns:aus="http://service.cablevision.net.mx/"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:bpelpm="http://xmlns.oracle.com/bpel"
                xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
                xmlns:ns1="http://xmlns.oracle.com/GetDiagnosticTel/GetDiagnosticTel_DS"
                xmlns:ns3="http://xmlns.cablevision.net.mx/DrCable_SOA/DrCable/DasNOCGetStatusEquipment"
                xmlns:ns2="http://xmlns.cablevision.net.mx/DrCable_SOA/DrCable/OrNOCDiagnostico"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:hab2="http://schemas.microsoft.com/2003/10/Serialization/Arrays"
                xmlns:rules="http://xmlns.oracle.com/bpel/rules"
                xmlns:hab="http://schemas.datacontract.org/2004/07/AMDrCable"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:med="http://schemas.oracle.com/mediator/xpath"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:tns="http://xmlns.cablevision.net.mx/DrCable_SOA/DrCable/OrNOCBuscaStatusNow"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:bpmn="http://schemas.oracle.com/bpm/xpath"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                exclude-result-prefixes="xsi xsl ns0 ns3 hab2 hab tns xsd bpelpm ns1 ns2 rules xp20 bpws bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref bpmn ldap">
  <xsl:template match="/">
    <ns1:callFunctionStateless>
      <xsl:attribute name="name">
        <xsl:text disable-output-escaping="no">GetDiagnosticTel_DS</xsl:text>
      </xsl:attribute>
      <ns1:parameterList>
        <ns2:process>
          <ns2:signalNoiseRatio>
            <xsl:text disable-output-escaping="no">0</xsl:text>
          </ns2:signalNoiseRatio>
          <ns2:upStream>
            <xsl:text disable-output-escaping="no">0</xsl:text>
          </ns2:upStream>
          <ns2:downStream>
            <xsl:text disable-output-escaping="no">0</xsl:text>
          </ns2:downStream>
          <ns2:reset>
            <xsl:text disable-output-escaping="no">0</xsl:text>
          </ns2:reset>
          <ns2:lostSyncs>
            <xsl:text disable-output-escaping="no">0</xsl:text>
          </ns2:lostSyncs>
          <xsl:choose>
            <xsl:when test="count(/tns:processResponse/tns:aprovisionamiento/hab:cmClientClasses) > 0.0 and contains(/tns:processResponse/tns:aprovisionamiento/hab:cmClientClasses, 'SIN_DATOS')">
              <ns2:cmClientClasses>
                <xsl:text disable-output-escaping="no">SIN_DATOS</xsl:text>
              </ns2:cmClientClasses>
            </xsl:when>
            <xsl:otherwise>
              <ns2:cmClientClasses>
                <xsl:value-of select="/tns:processResponse/tns:aprovisionamiento/hab:cmClientClasses"/>
              </ns2:cmClientClasses>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:if test="count(/tns:processResponse/tns:tecnologia) > 0.0">
            <ns2:tecnologia>
              <xsl:value-of select="/tns:processResponse/tns:tecnologia"/>
            </ns2:tecnologia>
          </xsl:if>
          <xsl:if test="count(/tns:processResponse/tns:status/telefonia/statusMTA/provisioningState) > 0.0">
            <ns2:provisioningState>
              <xsl:value-of select="/tns:processResponse/tns:status/telefonia/statusMTA/provisioningState"/>
            </ns2:provisioningState>
          </xsl:if>
          <xsl:for-each select="/tns:processResponse/tns:status/telefonia/statusMTAExt/lineasTelefonicas">
            <xsl:if test="(position() = 1.0) and (count(batteryStatus) > 0.0)">
              <ns2:batteryStatus>
                <xsl:value-of select="batteryStatus"/>
              </ns2:batteryStatus>
            </xsl:if>
          </xsl:for-each>
          <xsl:for-each select="/tns:processResponse/tns:status/telefonia/statusMTAExt/lineasTelefonicas">
            <xsl:if test="(position() = 1.0) and (count(maintenanceState) > 0.0)">
              <ns2:stateLine>
                <xsl:value-of select="maintenanceState"/>
              </ns2:stateLine>
            </xsl:if>
          </xsl:for-each>
          <xsl:for-each select="/tns:processResponse/tns:status/telefonia/statusMTAExt/lineasTelefonicas">
            <xsl:if test="(position() = 1.0) and (count(lastDiagnostic) > 0.0)">
              <ns2:lastDiagnostic>
                <xsl:value-of select="lastDiagnostic"/>
              </ns2:lastDiagnostic>
            </xsl:if>
          </xsl:for-each>
        </ns2:process>
      </ns1:parameterList>
    </ns1:callFunctionStateless>
  </xsl:template>
</xsl:stylesheet>
