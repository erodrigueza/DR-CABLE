<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="WSDL">
      <schema location="../GetDataFileAdptr.wsdl"/>
      <rootElement name="drCable" namespace="http://xmlns.cablevision.net.mx/DrCable_SOA/DrCable/GetDataFile"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="../OrNOCGetDiagnostiDAC.wsdl"/>
      <rootElement name="processResponse" namespace="http://xmlns.cablevision.net.mx/DrCable_SOA/DrCable/OrNOCGetDiagnostiDAC"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.7.0(build 130301.0647.0008) AT [TUE NOV 26 11:44:13 CST 2013]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/file/DrCable_SOA/OrNOCGetDiagnostiDAC/GetDataFileAdptr"
                xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:ns2="http://xmlns.cablevision.net.mx/DrCable_SOA/DrCable/TskDiagnosticoDAC"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:client="http://xmlns.cablevision.net.mx/DrCable_SOA/DrCable/OrNOCGetDiagnostiDAC"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:med="http://schemas.oracle.com/mediator/xpath"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:ns1="http://dacInvoker.vitria.cablevision.com"
                xmlns:bpmn="http://schemas.oracle.com/bpm/xpath"
                xmlns:imp1="http://xmlns.cablevision.net.mx/DrCable_SOA/DrCable/GetDataFile"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                exclude-result-prefixes="xsi xsl tns plt wsdl jca xsd imp1 client plnk ns1 xp20 bpws bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref bpmn ldap">
  <xsl:template match="/">
    <client:processResponse>
      <xsl:for-each select="/imp1:drCable/imp1:diagnosticos/imp1:diagnostico">
        <xsl:if test="../../imp1:code = imp1:id">
          <client:diagnosticoDAC>
            <client:codigo>
              <xsl:value-of select="imp1:id"/>
            </client:codigo>
            <client:texto>
              <xsl:value-of select="imp1:txt"/>
            </client:texto>
            <client:explicacion>
              <xsl:value-of select="imp1:explicacion"/>
            </client:explicacion>
          </client:diagnosticoDAC>
        </xsl:if>
      </xsl:for-each>
      <xsl:for-each select="/imp1:drCable/imp1:diagnosticos/imp1:diagnostico">
        <xsl:if test="../../imp1:code = imp1:id">
          <client:checkList>
            <xsl:for-each select="imp1:checkList/imp1:itemsCheck">
              <client:itemsCheck>
                <client:name>
                  <xsl:value-of select="imp1:name"/>
                </client:name>
                <client:value>
                  <xsl:value-of select="imp1:value"/>
                </client:value>
              </client:itemsCheck>
            </xsl:for-each>
          </client:checkList>
        </xsl:if>
      </xsl:for-each>
    </client:processResponse>
  </xsl:template>
</xsl:stylesheet>
